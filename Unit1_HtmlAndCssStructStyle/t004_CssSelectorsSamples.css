/* universal selector (applies to everything) */
* {
  /* set stuff */
}

/* targeting a single element type */
p {
  /* set stuff */
}

/* targeting two different elements */
p, input {
  /* set stuff */
}

/* targeting a class */
.foo {
  /* set stuff */
}

/* targeting an id */
/* avoid these, but know how to recognize
  them in the wild. It's usually better to
  use a class selector instead.
*/
#bar {
  /* set stuff */
}

/* targeting an element with a class */
/* try to avoid this, in favor of simple class declaration */
p.foo {
  /* set stuff */
}

/* targeting descendants */
ul.foo li {
  /* any `li` within `ul.foo` will get targeted */
}

/* targeting direct children */
ul > li  {
  /*  only `li`s that are direct children of ul targeted */
}

/* targeting submit buttons */
button[type="submit"] {
  /* any button with a type of "submit" */
}

/* Before and after */
blockquote::before{
  content: open-quote;
}
blockquote::after{
  content: close-quote;
}



/* Anchor Pseudo Classes */
a:link {
  /* unvisited link */
}

a:visited {
  /* visited link */
}

a:hover {
  /* mouse over link */
}

a:focus {
  /* keyboard focus on link */
}

a:active {
  /* selected link (i.e., you've clicked
    but not released on the link)
 */
}


/* Attribute selectors */

/* Exact match:  */
element[attribute=value]
/* Match pattern anywhere in value:  */
element[attribute*=value]
/* Match pattern at beginning of value:  */
element[attribute^=value]
/* Match pattern at end of value:  */
element[attribute$=value]
